import{_ as e,v as o,b as l,R as n}from"./chunks/framework.93db0df8.js";const h=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md","lastUpdated":1692177239000}'),t={name:"guide/index.md"},s=n('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p><strong>PlusProComponents 灵感来自于<a href="https://procomponents.ant.design/" target="_blank" rel="noreferrer">AntDesign ProComponents</a>。PlusProComponents 是基于 element-plus 而开发的模板组件，它提供了更高级别的抽象支持，开箱即用。可以显著的提升制作 CRUD 页面的效率，更加专注于页面。</strong></p><h2 id="组件列表" tabindex="-1">组件列表 <a class="header-anchor" href="#组件列表" aria-label="Permalink to &quot;组件列表&quot;">​</a></h2><ul><li><p><a href="/components/page.html">PlusPage</a> 页面模板组件，抽象网络请求和表格格式化。</p></li><li><p><a href="/components/table.html">PlusTable</a> 表格模板组件。</p></li><li><p><a href="/components/search.html">PlusSearch</a> 搜索模板组件。</p></li><li><p><a href="/components/form.html">PlusForm</a> 表单模板组件，预设常见布局和行为。</p></li><li><p><a href="/components/dialog-form.html">PlusDialogForm </a> 弹窗表单模板组件，预设常见布局和行为。</p></li><li><p><a href="/components/drawer-form.html">PlusDrawerForm </a> 抽屉表单模板组件，预设常见布局和行为。</p></li><li><p><a href="/components/description.html">PlusDescriptions</a> 定义列表模板组件。</p></li></ul><h2 id="组件特性" tabindex="-1">组件特性 <a class="header-anchor" href="#组件特性" aria-label="Permalink to &quot;组件特性&quot;">​</a></h2><ul><li><p>功能强大：<code>PlusProComponents</code> 的组件不仅提供了基本的 UI 展示功能，还具备了复杂的数据操作和业务逻辑处理能力，能够快速构建出功能强大的企业应用。</p></li><li><p>易于使用：<code>PlusProComponents</code> 提供了简单易用的 API 和完善的文档，使得开发者能够快速上手并使用其中的组件。</p></li><li><p>高度可定制：<code>PlusProComponents</code> 的组件支持多种配置和样式自定义，能够满足不同项目的需求。</p></li><li><p>兼容 element-plus：<code>PlusProComponents</code> 100%兼容和 element-plus 同名的组件，包括属性，事件，方法，插槽等。</p></li><li><p>丰富的组件库：<code>PlusProComponents</code> 基于 element-plus 提供了大量的 UI 组件，包括表格、表单、图表等，能够满足大多数企业应用的需求。</p></li><li><p>使用 TypeScript：<code>PlusProComponents</code> 全量使用 TypeScript 编写，和你的 TypeScript 项目无缝衔接。</p></li><li><p>国际化：<code>PlusProComponents</code>提供完备的国际化，与 element-plus 体系打通，无需多余配置。</p></li><li><p>预设： PlusProComponents 预设基本的样式，与 element-plus 样式一脉相承。 PlusProComponents 预设基本的行为，更少的代码具备更多的功能。</p></li></ul><h2 id="组件缺点" tabindex="-1">组件缺点 <a class="header-anchor" href="#组件缺点" aria-label="Permalink to &quot;组件缺点&quot;">​</a></h2><p><code>PlusProComponents</code> 是一个基于<code> Vue</code> 和 <code>element-plus</code> 的组件库，它提供了很多常用的 UI 组件和业务组件，可以方便地帮助开发者快速搭建前端页面。虽然 <code>PlusProComponents</code> 具有很多优点，但是也有以下一些缺点：</p><ul><li><p>学习成本高：<code>PlusProComponents</code> 的组件库比较复杂，学习所有组件可能需要花费较长时间。因此，对于新手开发者来说，学习成本可能会比较高。</p></li><li><p>依赖项过多：<code>PlusProComponents</code> 依赖了很多第三方库和组件，这可能会增加项目的体积和加载时间。</p></li><li><p>高度可定制有限：<code>PlusProComponents</code> 的组件支持高度可定制，但是任然不可能保证组件 100%完全自定义，定制需求非常高的项目谨慎使用。</p></li></ul>',9),p=[s];function a(r,i,d,c,m,u){return o(),l("div",null,p)}const f=e(t,[["render",a]]);export{h as __pageData,f as default};
